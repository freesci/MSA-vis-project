from msa_vis.msa_vis_app.models import Page,PageFormfrom django.shortcuts import render_to_responsefrom django.http import HttpResponseRedirectfrom django.core.urlresolvers import reversefrom models import PageFormimport msa_vis.settings as settingsimport os,datetime,timeimport subprocess as subsettingsMEDIA_ROOT,settingsPAGE_ADRESS = settings.MEDIA_ROOT,settings.PAGE_ADRESSdef create_picture(choice,settingsMEDIA_ROOT,file_absolutepath,jobID,linewidth):  if choice=="Slow":    return sub.Popen([settingsMEDIA_ROOT + "uploaded_files/msavisproject.py","SLOW", file_absolutepath,"MSAvis"+jobID+".svg",linewidth,settingsMEDIA_ROOT],cwd=settingsMEDIA_ROOT + "uploaded_files/")  elif choice=="Fast":    return sub.Popen([settingsMEDIA_ROOT + "uploaded_files/msavisproject.py","FAST", file_absolutepath,"MSAvis"+jobID+".svg",linewidth,settingsMEDIA_ROOT],cwd=settingsMEDIA_ROOT + "uploaded_files/")  def first_page(request):        if request.method == 'POST':            form = PageForm(request.POST,request.FILES)            if form.is_valid():	mail = form.cleaned_data["email"]	sequences = form.cleaned_data["sequences"]	linewidth = form.cleaned_data["linewidth"]	choice = form.cleaned_data["choice"]	m = form.save()		ID = m.id	date = Page.objects.get(id=ID).timedate	utime = int(time.mktime(date.timetuple())) # http://stackoverflow.com/questions/1259219/django-datefield-to-unix-timestamp	jobID = str(ID) + "-" + str(utime)		if linewidth is not None:  linewidth= str(linewidth)	if linewidth is None:	   linewidth = "30"		if m.upload_file:	  	  file_absolutepath = m.upload_file.path	  create_picture(choice,settingsMEDIA_ROOT,file_absolutepath,jobID,linewidth)	  	  	if sequences!="":	  	  file_absolutepath = settingsMEDIA_ROOT + "uploaded_files/filename.fasta"	  from Bio import AlignIO,SeqIO	  import StringIO	  x=StringIO.StringIO(sequences)	  output_handle = open(file_absolutepath, "w")	  SeqIO.write(SeqIO.parse(x, "fasta"), output_handle, "fasta")	  output_handle.close()	  x.close()	  	  create_picture(choice,settingsMEDIA_ROOT,file_absolutepath,jobID,linewidth)		if mail!="":	  settings.EMAIL_SEND_TO = mail	          return HttpResponseRedirect(reverse('msa_vis.msa_vis_app.views.second_page',args=[ID,utime]))      else:	return render_to_response("first_page.html",{"form":form})	    else:      form = PageForm() # create empty form    return render_to_response("first_page.html",{"form":form}) def second_page(request,ID,unixtime):    jobID = str(ID) + "-" + str(unixtime)  date = Page.objects.get(id=ID).timedate    if not os.path.exists(settingsMEDIA_ROOT + "uploaded_files/"+"finalMSAvis"+jobID+".svg"):    return render_to_response("between_page.html",{"jobID":jobID, "date":date})    #TODO: email wysylac w tle  if not settings.EMAIL_SEND_TO=="":    from django.core.mail import EmailMessage    html_content = 'Your job %s is complete (from %s).<p>You can fing your image <a href=%s/msa_vis/result/%s>here</a> </p> or download below:' % (jobID, date,settings.PAGE_ADRESS,jobID)    msg = EmailMessage('MSAvis',html_content,to = [settings.EMAIL_SEND_TO])    msg.content_subtype = "html"    msg.attach_file(settings.MEDIA_ROOT+"uploaded_files/final" + "MSAvis"+jobID+".svg")    msg.send()   return render_to_response("second_page.html",{"jobID":jobID,"date":date})