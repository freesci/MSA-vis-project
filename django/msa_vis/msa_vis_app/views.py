# Create your views here.from msa_vis.msa_vis_app.models import Page,PageFormfrom django.shortcuts import render_to_responsefrom django.http import HttpResponseRedirectfrom django.http import HttpResponsefrom django.template import Context, loaderfrom models import PageFormimport msa_vis.settings as settingsfrom time import time, localtime, sleepimport osimport subprocess as subst = localtime(time())datetime = "%d-%d-%d %d:%d:%d CEST" % (st.tm_year, st.tm_mon, st.tm_mday, st.tm_hour, st.tm_min, st.tm_sec)def first_page(request):    if request.method == 'POST': # If the form has been submitted...      utime = int(time())      page = Page(unixtime = utime)            form = PageForm(request.POST,request.FILES,instance=page)            if form.is_valid(): # All validation rules pass      	mail = form.cleaned_data["email"]	sequences = form.cleaned_data["sequences"]	linewidth = form.cleaned_data["linewidth"]	choice = form.cleaned_data["choice"]	m=form.save()	jobID = str(m.id)+str(utime)		if linewidth is not None:  linewidth= str(linewidth)		if m.upload_file:	  file_absolutepath = m.upload_file.path	  if linewidth is not None:	    	    #TODO: dopisac "prosty lock" i przechowywanie obrazka dla uzytkownika przez jakis okreslony czas na stronie 'http://127.0.0.1:8000/msa_vis/result/{{jobID}}/'	    print "doszedlem tu i nie chce przejsc na nastepna strona"	    between_page(jobID,datetime)	    if choice=="Slow":		p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", file_absolutepath, "-o","MSAvis"+jobID+".svg", "-a",linewidth],cwd=settings.MEDIA_ROOT + "uploaded_files/")	    elif choice=="Fast":	p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", file_absolutepath, "-o","MSAvis"+jobID+".svg","-p", "-a",linewidth],cwd=settings.MEDIA_ROOT + "uploaded_files/")	  else:	    if choice=="Slow":		p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", file_absolutepath, "-o","MSAvis"+jobID+".svg"],cwd=settings.MEDIA_ROOT + "uploaded_files/")	    elif choice=="Fast":	p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", file_absolutepath, "-o","MSAvis"+jobID+".svg","-p"],cwd=settings.MEDIA_ROOT + "uploaded_files/")	  child_output, child_error = p.communicate(input="234")	  	  	if sequences!="":	  f = settings.MEDIA_ROOT + "uploaded_files/filename.fasta"	  from Bio import AlignIO	  from Bio import SeqIO	  import StringIO	  x=StringIO.StringIO(sequences)	  output_handle = open(f, "w")	  s = SeqIO.parse(x, "fasta")	  count = SeqIO.write(s, output_handle, "fasta")	  output_handle.close()	  x.close()	  	  if linewidth is not None:	    	    #TODO: dopisac "prosty lock" i przechowywanie obrazka dla uzytkownika przez jakis okreslony czas na stronie 'http://127.0.0.1:8000/msa_vis/result/{{jobID}}/'            #print "doszedlem tutaj i nie chce przejsc na nastepna strone"	    between_page(jobID,datetime)	    	    if choice=="Slow":		p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", f, "-o","MSAvis"+jobID+".svg","-a",linewidth],cwd=settings.MEDIA_ROOT + "uploaded_files/")	    elif choice=="Fast":	p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", f, "-o","MSAvis"+jobID+".svg","-p","-a",linewidth],cwd=settings.MEDIA_ROOT + "uploaded_files/")	  else:	    if choice=="Slow":		p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", f, "-o","MSAvis"+jobID+".svg"],cwd=settings.MEDIA_ROOT + "uploaded_files/")	    elif choice=="Fast":	p = sub.Popen([settings.MEDIA_ROOT + "uploaded_files/msavisproject.py", f, "-o","MSAvis"+jobID+".svg","-p"],cwd=settings.MEDIA_ROOT + "uploaded_files/")	  child_output, child_error = p.communicate(input="234")	#gdyby stara baza danych uniemozliwiala pojscie dalej - np. Type error i jakies krzaki	#/manage.py reset msa_vis_app	# usuniecie wszsytkich tabel dotyczacych aplikacji z bazy danych i utworzenie ich na nowo	# ./manage syncdb 		if mail!="":	  from django.core.mail import EmailMessage	  text_content = 'This is an important message.'	  html_content = html_content = 'Your job %s is complete (from %s).<p>You can fing your image <a href=http://127.0.0.1:8000/msa_vis/result/%s>here</a> </p> or download below:' % (jobID, datetime,jobID)	  msg = EmailMessage('MSAvis',html_content,to = [mail])	  msg.content_subtype = "html"	  msg.attach_file(settings.MEDIA_ROOT + "uploaded_files/MSAvis"+jobID+".svg")	  msg.send()	#TODO Tak sie sprawdza czy plik istnieje:	#while os.path.exists(settings.MEDIA_ROOT + "uploaded_files/process_lock"):	  #return render_to_response("between_page.html",{"jobID":jobID,"datetime":datetime})	  #time.sleep(30)	        return render_to_response("second_page.html",{"jobID":jobID,"datetime":datetime})      else: # wyjatek jesli uztkownik zle wypelni jakies pole	return render_to_response("first_page.html",{"form":form})	    else: # tu tylko ogladanie strony first_page.html      form = PageForm() # tu tworzony pusty formularz    return render_to_response("first_page.html",{"form":form}) def second_page(request,jobID):  return render_to_response("second_page.html",{"jobID":jobID,"datetime":datetime})def between_page(jobID,datetime):  return render_to_response("between_page.html",{"jobID":jobID,"datetime":datetime})      